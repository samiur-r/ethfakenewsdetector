{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anisu\\\\Desktop\\\\vot8\\\\client\\\\src\\\\component\\\\Registration\\\\Registration.js\";\n// Node modules\nimport React, { Component } from \"react\"; // Components\n\nimport Navbar from \"../Navbar/Navigation\";\nimport NavbarAdmin from \"../Navbar/NavigationAdmin\";\nimport NotInit from \"../NotInit\"; // CSS\n\nimport \"./Registration.css\"; // Contract\n\nimport getWeb3 from \"../../getWeb3\";\nimport newsDetection from \"../../contracts/newsDetection.json\";\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      if (!window.location.hash) {\n        window.location = window.location + \"#loaded\";\n        window.location.reload();\n      }\n\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = newsDetection.networks[networkId];\n        const instance = new web3.eth.Contract(newsDetection.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3: web3,\n          newsDetectionInstance: instance,\n          account: accounts[0]\n        }); // Admin account and verification\n\n        const admin = await this.state.newsDetectionInstance.methods.getAdmin().call();\n\n        if (this.state.account === admin) {\n          this.setState({\n            isAdmin: true\n          });\n        } // Get start and end values\n\n\n        const start = await this.state.newsDetectionInstance.methods.getStart().call();\n        this.setState({\n          isElStarted: start\n        });\n        const end = await this.state.newsDetectionInstance.methods.getEnd().call();\n        this.setState({\n          isElEnded: end\n        }); // Total number of evaluators\n\n        const evaluatorCount = await this.state.newsDetectionInstance.methods.getTotalEvaluator().call();\n        this.setState({\n          evaluatorCount: evaluatorCount\n        }); // Loading all the evaluators\n\n        for (let i = 0; i < this.state.evaluatorCount; i++) {\n          const evaluatorAddress = await this.state.newsDetectionInstance.methods.evaluators(i).call();\n          const evaluator = await this.state.newsDetectionInstance.methods.evaluatorDetails(evaluatorAddress).call();\n          this.state.evaluators.push({\n            address: evaluator.evaluatorAddress,\n            name: evaluator.name,\n            phone: evaluator.phone,\n            hasVoted: evaluator.hasVoted,\n            isVerified: evaluator.isVerified,\n            isRegistered: evaluator.isRegistered\n          });\n        }\n\n        this.setState({\n          evaluators: this.state.evaluators\n        }); // Loading current evaluators\n\n        const evaluator = await this.state.newsDetectionInstance.methods.evaluatorDetails(this.state.account).call();\n        this.setState({\n          currentEvaluator: {\n            address: evaluator.evaluatorAddress,\n            name: evaluator.name,\n            phone: evaluator.phone,\n            hasVoted: evaluator.hasVoted,\n            isVerified: evaluator.isVerified,\n            isRegistered: evaluator.isRegistered\n          }\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        console.error(error);\n        alert(`Failed to load web3, accounts, or contract. Check console for details (f12).`);\n      }\n    };\n\n    this.updateEvaluatorName = event => {\n      this.setState({\n        evaluatorName: event.target.value\n      });\n    };\n\n    this.updateEvaluatorPhone = event => {\n      this.setState({\n        evaluatorPhone: event.target.value\n      });\n    };\n\n    this.registerAsEvaluator = async () => {\n      await this.state.newsDetectionInstance.methods.registerAsEvaluator(this.state.evaluatorName, this.state.evaluatorPhone).send({\n        from: this.state.account,\n        gas: 1000000\n      });\n      window.location.reload();\n    };\n\n    this.state = {\n      newsDetectionInstance: undefined,\n      web3: null,\n      account: null,\n      isAdmin: false,\n      isElStarted: false,\n      isElEnded: false,\n      evaluatorCount: undefined,\n      evaluatorName: \"\",\n      evaluatorPhone: \"\",\n      evaluators: [],\n      currentEvaluator: {\n        address: undefined,\n        name: null,\n        phone: null,\n        hasVoted: false,\n        isVerified: false,\n        isRegistered: false\n      }\n    };\n  } // refreshing once\n\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isAdmin ? /*#__PURE__*/React.createElement(NavbarAdmin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, \"Loading Web3, accounts, and contract...\"));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.isAdmin ? /*#__PURE__*/React.createElement(NavbarAdmin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 49\n      }\n    }), !this.state.isElStarted && !this.state.isElEnded ? /*#__PURE__*/React.createElement(NotInit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Total registered evaluators: \", this.state.evaluators.length)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Registration\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, \"Register to evaluate.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-r\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Account Address\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-r\",\n      type: \"text\",\n      value: this.state.account,\n      style: {\n        width: \"400px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 23\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-r\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-r\",\n      type: \"text\",\n      placeholder: \"eg. Anis\",\n      value: this.state.evaluatorName,\n      onChange: this.updateEvaluatorName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label-r\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, \"Phone number \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"tomato\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 36\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-r\",\n      type: \"number\",\n      placeholder: \"eg. 0179400000\",\n      value: this.state.evaluatorPhone,\n      onChange: this.updateEvaluatorPhone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"tomato\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \" Note: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }), \" Correctly fill up your Account address, name and phone number Make sure your account address and Phone number are correct.\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-add\",\n      disabled: this.state.evaluatorPhone.length !== 10 || this.state.currentEvaluator.isVerified,\n      onClick: this.registerAsEvaluator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, this.state.currentEvaluator.isRegistered ? \"Update\" : \"Register\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-main\",\n      style: {\n        borderTop: this.state.currentEvaluator.isRegistered ? null : \"1px solid\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, loadCurrentEvaluator(this.state.currentEvaluator, this.state.currentEvaluator.isRegistered)), this.state.isAdmin ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-main\",\n      style: {\n        borderTop: \"1px solid\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, \"TotalEvaluators: \", this.state.evaluators.length), loadAllEvaluators(this.state.evaluators)) : null));\n  }\n\n}\nexport function loadCurrentEvaluator(evaluator, isRegistered) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-item \" + (isRegistered ? \"success\" : \"attention\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, \"Your Registered Info\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-list \" + (isRegistered ? \"success\" : \"attention\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, \"Your Account Address :\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, evaluator.address)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Your Name :\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, evaluator.name)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, \"Your Phone :\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, evaluator.phone)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, \"Voted\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, evaluator.hasVoted ? \"True\" : \"False\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, \"Verification\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, evaluator.isVerified ? \"True\" : \"False\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Registered\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, evaluator.isRegistered ? \"True\" : \"False\")))));\n}\nexport function loadAllEvaluators(evaluators) {\n  const renderAllEvaluators = evaluator => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-list success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, \"Account address\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 15\n      }\n    }, evaluator.address)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, evaluator.name)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 15\n      }\n    }, evaluator.phone)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 15\n      }\n    }, \"Voted\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }, evaluator.hasVoted ? \"True\" : \"False\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, \"Verified\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }, evaluator.isVerified ? \"True\" : \"False\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }\n    }, \"Registered\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }\n    }, evaluator.isRegistered ? \"True\" : \"False\")))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-item success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, \"List of evaluators\")), evaluators.map(renderAllEvaluators));\n}","map":{"version":3,"names":["React","Component","Navbar","NavbarAdmin","NotInit","getWeb3","newsDetection","Registration","constructor","props","componentDidMount","window","location","hash","reload","web3","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","newsDetectionInstance","account","admin","state","methods","getAdmin","call","isAdmin","start","getStart","isElStarted","end","getEnd","isElEnded","evaluatorCount","getTotalEvaluator","i","evaluatorAddress","evaluators","evaluator","evaluatorDetails","push","name","phone","hasVoted","isVerified","isRegistered","currentEvaluator","error","console","alert","updateEvaluatorName","event","evaluatorName","target","value","updateEvaluatorPhone","evaluatorPhone","registerAsEvaluator","send","from","gas","undefined","render","length","width","color","borderTop","loadCurrentEvaluator","loadAllEvaluators","renderAllEvaluators","map"],"sources":["C:/Users/Anisu/Desktop/vot8/client/src/component/Registration/Registration.js"],"sourcesContent":["// Node modules\nimport React, { Component } from \"react\";\n\n// Components\nimport Navbar from \"../Navbar/Navigation\";\nimport NavbarAdmin from \"../Navbar/NavigationAdmin\";\nimport NotInit from \"../NotInit\";\n\n// CSS\nimport \"./Registration.css\";\n\n// Contract\nimport getWeb3 from \"../../getWeb3\";\nimport newsDetection from \"../../contracts/newsDetection.json\";\n\nexport default class Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newsDetectionInstance: undefined,\n      web3: null,\n      account: null,\n      isAdmin: false,\n      isElStarted: false,\n      isElEnded: false,\n      evaluatorCount: undefined,\n      evaluatorName: \"\",\n      evaluatorPhone: \"\",\n      evaluators: [],\n      currentEvaluator: {\n        address: undefined,\n        name: null,\n        phone: null,\n        hasVoted: false,\n        isVerified: false,\n        isRegistered: false,\n      },\n    };\n  }\n\n  // refreshing once\n  componentDidMount = async () => {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = newsDetection.networks[networkId];\n      const instance = new web3.eth.Contract(\n        newsDetection.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({\n        web3: web3,\n        newsDetectionInstance: instance,\n        account: accounts[0],\n      });\n\n      // Admin account and verification\n      const admin = await this.state.newsDetectionInstance.methods.getAdmin().call();\n      if (this.state.account === admin) {\n        this.setState({ isAdmin: true });\n      }\n\n      // Get start and end values\n      const start = await this.state.newsDetectionInstance.methods.getStart().call();\n      this.setState({ isElStarted: start });\n      const end = await this.state.newsDetectionInstance.methods.getEnd().call();\n      this.setState({ isElEnded: end });\n\n      // Total number of evaluators\n      const evaluatorCount = await this.state.newsDetectionInstance.methods\n        .getTotalEvaluator()\n        .call();\n      this.setState({ evaluatorCount: evaluatorCount });\n\n      // Loading all the evaluators\n      for (let i = 0; i < this.state.evaluatorCount; i++) {\n        const evaluatorAddress = await this.state.newsDetectionInstance.methods\n          .evaluators(i)\n          .call();\n        const evaluator = await this.state.newsDetectionInstance.methods\n          .evaluatorDetails(evaluatorAddress)\n          .call();\n        this.state.evaluators.push({\n          address: evaluator.evaluatorAddress,\n          name: evaluator.name,\n          phone: evaluator.phone,\n          hasVoted: evaluator.hasVoted,\n          isVerified: evaluator.isVerified,\n          isRegistered: evaluator.isRegistered,\n        });\n      }\n      this.setState({ evaluators: this.state.evaluators });\n\n      // Loading current evaluators\n      const evaluator = await this.state.newsDetectionInstance.methods\n        .evaluatorDetails(this.state.account)\n        .call();\n      this.setState({\n        currentEvaluator: {\n          address: evaluator.evaluatorAddress,\n          name: evaluator.name,\n          phone: evaluator.phone,\n          hasVoted: evaluator.hasVoted,\n          isVerified: evaluator.isVerified,\n          isRegistered: evaluator.isRegistered,\n        },\n      });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      console.error(error);\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details (f12).`\n      );\n    }\n  };\n  updateEvaluatorName = (event) => {\n    this.setState({ evaluatorName: event.target.value });\n  };\n  updateEvaluatorPhone = (event) => {\n    this.setState({ evaluatorPhone: event.target.value });\n  };\n  registerAsEvaluator = async () => {\n    await this.state.newsDetectionInstance.methods\n      .registerAsEvaluator(this.state.evaluatorName, this.state.evaluatorPhone)\n      .send({ from: this.state.account, gas: 1000000 });\n    window.location.reload();\n  };\n  render() {\n    if (!this.state.web3) {\n      return (\n        <>\n          {this.state.isAdmin ? <NavbarAdmin /> : <Navbar />}\n          <center>Loading Web3, accounts, and contract...</center>\n        </>\n      );\n    }\n    return (\n      <>\n        {this.state.isAdmin ? <NavbarAdmin /> : <Navbar />}\n        {!this.state.isElStarted && !this.state.isElEnded ? (\n          <NotInit />\n        ) : (\n          <>\n            <div className=\"container-item info\">\n              <p>Total registered evaluators: {this.state.evaluators.length}</p>\n            </div>\n            <div className=\"container-main\">\n              <h3>Registration</h3>\n              <small>Register to evaluate.</small>\n              <div className=\"container-item\">\n                <form>\n                  <div className=\"div-li\">\n                    <label className={\"label-r\"}>\n                      Account Address\n                      <input\n                        className={\"input-r\"}\n                        type=\"text\"\n                        value={this.state.account}\n                        style={{ width: \"400px\" }}\n                      />{\" \"}\n                    </label>\n                  </div>\n                  <div className=\"div-li\">\n                    <label className={\"label-r\"}>\n                      Name\n                      <input\n                        className={\"input-r\"}\n                        type=\"text\"\n                        placeholder=\"eg. Anis\"\n                        value={this.state.evaluatorName}\n                        onChange={this.updateEvaluatorName}\n                      />{\" \"}\n                    </label>\n                  </div>\n                  <div className=\"div-li\">\n                    <label className={\"label-r\"}>\n                      Phone number <span style={{ color: \"tomato\" }}>*</span>\n                      <input\n                        className={\"input-r\"}\n                        type=\"number\"\n                        placeholder=\"eg. 0179400000\"\n                        value={this.state.evaluatorPhone}\n                        onChange={this.updateEvaluatorPhone}\n                      />\n                    </label>\n                  </div>\n                  <p className=\"note\">\n                    <span style={{ color: \"tomato\" }}> Note: </span>\n                    <br /> Correctly fill up your Account address,\n                    name and phone number Make sure your account address and Phone number are\n                    correct.\n                  </p>\n                  <button\n                    className=\"btn-add\"\n                    disabled={\n                      this.state.evaluatorPhone.length !== 10 ||\n                      this.state.currentEvaluator.isVerified\n                    }\n                    onClick={this.registerAsEvaluator}\n                  >\n                    {this.state.currentEvaluator.isRegistered\n                      ? \"Update\"\n                      : \"Register\"}\n                  </button>\n                </form>\n              </div>\n            </div>\n            <div\n              className=\"container-main\"\n              style={{\n                borderTop: this.state.currentEvaluator.isRegistered\n                  ? null\n                  : \"1px solid\",\n              }}\n            >\n              {loadCurrentEvaluator(\n                this.state.currentEvaluator,\n                this.state.currentEvaluator.isRegistered\n              )}\n            </div>\n            {this.state.isAdmin ? (\n              <div\n                className=\"container-main\"\n                style={{ borderTop: \"1px solid\" }}\n              >\n                <small>TotalEvaluators: {this.state.evaluators.length}</small>\n                {loadAllEvaluators(this.state.evaluators)}\n              </div>\n            ) : null}\n          </>\n        )}\n      </>\n    );\n  }\n}\nexport function loadCurrentEvaluator(evaluator, isRegistered) {\n  return (\n    <>\n      <div\n        className={\"container-item \" + (isRegistered ? \"success\" : \"attention\")}\n      >\n        <center>Your Registered Info</center>\n      </div>\n      <div\n        className={\"container-list \" + (isRegistered ? \"success\" : \"attention\")}\n      >\n        <table>\n          <tr>\n            <th>Your Account Address :</th>\n            <td>{evaluator.address}</td>\n          </tr>\n          <tr>\n            <th>Your Name :</th>\n            <td>{evaluator.name}</td>\n          </tr>\n          <tr>\n            <th>Your Phone :</th>\n            <td>{evaluator.phone}</td>\n          </tr>\n          <tr>\n            <th>Voted</th>\n            <td>{evaluator.hasVoted ? \"True\" : \"False\"}</td>\n          </tr>\n          <tr>\n            <th>Verification</th>\n            <td>{evaluator.isVerified ? \"True\" : \"False\"}</td>\n          </tr>\n          <tr>\n            <th>Registered</th>\n            <td>{evaluator.isRegistered ? \"True\" : \"False\"}</td>\n          </tr>\n        </table>\n      </div>\n    </>\n  );\n}\nexport function loadAllEvaluators(evaluators) {\n  const renderAllEvaluators = (evaluator) => {\n    return (\n      <>\n        <div className=\"container-list success\">\n          <table>\n            <tr>\n              <th>Account address</th>\n              <td>{evaluator.address}</td>\n            </tr>\n            <tr>\n              <th>Name</th>\n              <td>{evaluator.name}</td>\n            </tr>\n            <tr>\n              <th>Phone</th>\n              <td>{evaluator.phone}</td>\n            </tr>\n            <tr>\n              <th>Voted</th>\n              <td>{evaluator.hasVoted ? \"True\" : \"False\"}</td>\n            </tr>\n            <tr>\n              <th>Verified</th>\n              <td>{evaluator.isVerified ? \"True\" : \"False\"}</td>\n            </tr>\n            <tr>\n              <th>Registered</th>\n              <td>{evaluator.isRegistered ? \"True\" : \"False\"}</td>\n            </tr>\n          </table>\n        </div>\n      </>\n    );\n  };\n  return (\n    <>\n      <div className=\"container-item success\">\n        <center>List of evaluators</center>\n      </div>\n      {evaluators.map(renderAllEvaluators)}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}